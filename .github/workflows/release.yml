name: Create Release and Upload Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build darwin-arm64
      run: GOOS=darwin GOARCH=arm64 go build -v -o netfold-${{ github.ref_name }}-darwin-arm64 .
    - name: Build linux-amd64
      run: GOOS=linux GOARCH=amd64 go build -v -o netfold-${{ github.ref_name }}-linux-amd64 .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload Release Assets darwin-arm64
      id: upload-release-asset-darwin-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: netfold-${{ github.ref_name }}-darwin-arm64
        asset_name: netfold-${{ github.ref_name }}-darwin-arm64
        asset_content_type: application/octet-stream
    - name: Upload Release Assets linux-amd64
      id: upload-release-asset-linux-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: netfold-${{ github.ref_name }}-linux-amd64
        asset_name: netfold-${{ github.ref_name }}-linux-amd64
        asset_content_type: application/octet-stream
